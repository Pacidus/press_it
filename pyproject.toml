[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "press_it"
dynamic = ["version"]
description = "A tool to compress images with formats targeting a perceptual quality"
readme = "README.md"
requires-python = ">=3.8"
license = {file = "LICENSE"}
keywords = [
    "image compression",
    "perceptual quality",
    "ssimulacra2",
    "mozjpeg",
    "webp",
    "avif",
]
authors = [
  {name = "Pacidus", email = "Pacidus@gmail.com"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: CPython",
    "License :: OSI Approved :: BSD License",
    "Topic :: Multimedia :: Graphics",
]
dependencies = [
    "tqdm>=4.50.0",
    "ssimulacra2>=0.3.0",
    "Pillow>=8.0.0",
    "requests>=2.25.0",
]

[project.urls]
Documentation = "https://github.com/Pacidus/press_it#readme"
Issues = "https://github.com/Pacidus/press_it/issues"
Source = "https://github.com/Pacidus/press_it"

[project.scripts]
press-it = "press_it.cli:main"
press-benchmark = "press_it.benchmark_cli:main"

[tool.hatch.version]
path = "press_it/__init__.py"

[tool.hatch.build.targets.sdist]
include = [
    "/press_it",
]

[tool.hatch.build.targets.wheel]
packages = ["press_it"]

[tool.hatch.envs.default]
dependencies = [
    "pytest",
    "pytest-cov",
]

[tool.hatch.envs.lint]
detached = true
dependencies = [
    "black>=23.1.0",
    "ruff>=0.0.243",
]

[tool.hatch.envs.lint.scripts]
style = ["ruff {args:.}", "black --check --diff {args:.}"]
fmt = ["black {args:.}", "ruff --fix {args:.}", "style"]
all = ["style"]

[tool.black]
target-version = ["py38"]
line-length = 88

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "F",  # pyflakes
]
